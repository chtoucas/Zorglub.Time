const Zorglub.Time.Core.Schemas.FrenchRepublicanSchema.DaysInFrenchRepublicanMonth = 30 -> int
const Zorglub.Time.Core.Schemas.FrenchRepublicanSchema.DaysPer4000YearCycle = 1460969 -> long
const Zorglub.Time.Core.Schemas.InternationalFixedSchema.DaysInCommonYear = 365 -> int
const Zorglub.Time.Core.Schemas.InternationalFixedSchema.DaysInInternationalFixedMonth = 28 -> int
const Zorglub.Time.Core.Schemas.InternationalFixedSchema.DaysInLeapYear = 366 -> int
const Zorglub.Time.Core.Schemas.InternationalFixedSchema.DaysPer400YearCycle = 146097 -> int
const Zorglub.Time.Core.Schemas.Persian2820Schema.DaysInCommonYear = 365 -> int
const Zorglub.Time.Core.Schemas.Persian2820Schema.DaysInLeapYear = 366 -> int
const Zorglub.Time.Core.Schemas.Persian2820Schema.DaysInYearBeforeJuly = 186 -> int
const Zorglub.Time.Core.Schemas.Persian2820Schema.DaysPer128YearSubcycle = 46751 -> int
const Zorglub.Time.Core.Schemas.Persian2820Schema.DaysPer2820YearCycle = 1029983 -> int
const Zorglub.Time.Core.Schemas.Persian2820Schema.Year0 = 474 -> int
const Zorglub.Time.Core.Schemas.PositivistSchema.DaysInCommonYear = 365 -> int
const Zorglub.Time.Core.Schemas.PositivistSchema.DaysInLeapYear = 366 -> int
const Zorglub.Time.Core.Schemas.PositivistSchema.DaysInPositivistMonth = 28 -> int
const Zorglub.Time.Core.Schemas.PositivistSchema.DaysPer400YearCycle = 146097 -> int
const Zorglub.Time.Core.Schemas.TropicaliaSchema.DaysInYearAfterFebruary = 306 -> int
const Zorglub.Time.Core.Schemas.TropicalistaSchema.DaysInCommonYear = 365 -> int
const Zorglub.Time.Core.Schemas.TropicalistaSchema.DaysInLeapYear = 366 -> int
const Zorglub.Time.Core.Schemas.TropicalistaSchema.DaysPer128YearCycle = 46751 -> int
const Zorglub.Time.Core.Schemas.TropicalistaSchema.DaysPer4YearSubcycle = 1461 -> int
const Zorglub.Time.Core.Schemas.WorldSchema.DaysInCommonYear = 365 -> int
const Zorglub.Time.Core.Schemas.WorldSchema.DaysInLeapYear = 366 -> int
const Zorglub.Time.Core.Schemas.WorldSchema.DaysPer400YearCycle = 146097 -> int
override sealed Zorglub.Time.Core.Schemas.Coptic13Schema.CountDaysInMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.Coptic13Schema.CountMonthsInYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.Coptic13Schema.CountMonthsSinceEpoch(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.Coptic13Schema.GetDateParts(int daysSinceEpoch, out int y, out int m, out int d) -> void
override sealed Zorglub.Time.Core.Schemas.Coptic13Schema.GetDatePartsAtEndOfYear(int y, out int m, out int d) -> void
override sealed Zorglub.Time.Core.Schemas.Coptic13Schema.GetMonth(int y, int doy, out int d) -> int
override sealed Zorglub.Time.Core.Schemas.Coptic13Schema.GetMonthParts(int monthsSinceEpoch, out int y, out int m) -> void
override sealed Zorglub.Time.Core.Schemas.Coptic13Schema.IsIntercalaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.Coptic13Schema.IsSupplementaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.Coptic13Schema.MonthsInYear.get -> int
override sealed Zorglub.Time.Core.Schemas.Egyptian13Schema.CountDaysInMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.Egyptian13Schema.CountMonthsInYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.Egyptian13Schema.CountMonthsSinceEpoch(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.Egyptian13Schema.GetDateParts(int daysSinceEpoch, out int y, out int m, out int d) -> void
override sealed Zorglub.Time.Core.Schemas.Egyptian13Schema.GetDatePartsAtEndOfYear(int y, out int m, out int d) -> void
override sealed Zorglub.Time.Core.Schemas.Egyptian13Schema.GetMonth(int y, int doy, out int d) -> int
override sealed Zorglub.Time.Core.Schemas.Egyptian13Schema.GetMonthParts(int monthsSinceEpoch, out int y, out int m) -> void
override sealed Zorglub.Time.Core.Schemas.Egyptian13Schema.IsSupplementaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.Egyptian13Schema.MonthsInYear.get -> int
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican12Schema.CountDaysInMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican12Schema.CountMonthsInYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican12Schema.CountMonthsSinceEpoch(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican12Schema.GetDateParts(int daysSinceEpoch, out int y, out int m, out int d) -> void
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican12Schema.GetDatePartsAtEndOfYear(int y, out int m, out int d) -> void
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican12Schema.GetMonth(int y, int doy, out int d) -> int
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican12Schema.GetMonthParts(int monthsSinceEpoch, out int y, out int m) -> void
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican12Schema.IsIntercalaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican12Schema.IsSupplementaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican12Schema.MonthsInYear.get -> int
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican13Schema.CountDaysInMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican13Schema.CountMonthsInYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican13Schema.CountMonthsSinceEpoch(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican13Schema.GetDateParts(int daysSinceEpoch, out int y, out int m, out int d) -> void
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican13Schema.GetDatePartsAtEndOfYear(int y, out int m, out int d) -> void
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican13Schema.GetMonth(int y, int doy, out int d) -> int
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican13Schema.GetMonthParts(int monthsSinceEpoch, out int y, out int m) -> void
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican13Schema.IsIntercalaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican13Schema.IsSupplementaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.FrenchRepublican13Schema.MonthsInYear.get -> int
override sealed Zorglub.Time.Core.Schemas.FrenchRepublicanSchema.CountDaysSinceEpoch(int y, int m, int d) -> int
override sealed Zorglub.Time.Core.Schemas.FrenchRepublicanSchema.GetStartOfYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.FrenchRepublicanSchema.GetYear(int daysSinceEpoch) -> int
override sealed Zorglub.Time.Core.Schemas.FrenchRepublicanSchema.GetYear(int daysSinceEpoch, out int doy) -> int
override sealed Zorglub.Time.Core.Schemas.FrenchRepublicanSchema.IsLeapYear(int y) -> bool
override sealed Zorglub.Time.Core.Schemas.InternationalFixedSchema.CountDaysInMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.InternationalFixedSchema.CountDaysInYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.InternationalFixedSchema.CountDaysInYearBeforeMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.InternationalFixedSchema.CountDaysSinceEpoch(int y, int m, int d) -> int
override sealed Zorglub.Time.Core.Schemas.InternationalFixedSchema.CountMonthsInYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.InternationalFixedSchema.CountMonthsSinceEpoch(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.InternationalFixedSchema.Family.get -> Zorglub.Time.CalendricalFamily
override sealed Zorglub.Time.Core.Schemas.InternationalFixedSchema.GetDatePartsAtEndOfYear(int y, out int m, out int d) -> void
override sealed Zorglub.Time.Core.Schemas.InternationalFixedSchema.GetMonth(int y, int doy, out int d) -> int
override sealed Zorglub.Time.Core.Schemas.InternationalFixedSchema.GetMonthParts(int monthsSinceEpoch, out int y, out int m) -> void
override sealed Zorglub.Time.Core.Schemas.InternationalFixedSchema.GetStartOfYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.InternationalFixedSchema.GetYear(int daysSinceEpoch) -> int
override sealed Zorglub.Time.Core.Schemas.InternationalFixedSchema.IsIntercalaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.InternationalFixedSchema.IsIntercalaryMonth(int y, int m) -> bool
override sealed Zorglub.Time.Core.Schemas.InternationalFixedSchema.IsLeapYear(int y) -> bool
override sealed Zorglub.Time.Core.Schemas.InternationalFixedSchema.IsSupplementaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.InternationalFixedSchema.PeriodicAdjustments.get -> Zorglub.Time.CalendricalAdjustments
override sealed Zorglub.Time.Core.Schemas.Persian2820Schema.CountDaysInMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.Persian2820Schema.CountDaysInYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.Persian2820Schema.CountDaysInYearBeforeMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.Persian2820Schema.CountMonthsInYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.Persian2820Schema.CountMonthsSinceEpoch(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.Persian2820Schema.Family.get -> Zorglub.Time.CalendricalFamily
override sealed Zorglub.Time.Core.Schemas.Persian2820Schema.GetDatePartsAtEndOfYear(int y, out int m, out int d) -> void
override sealed Zorglub.Time.Core.Schemas.Persian2820Schema.GetMonth(int y, int doy, out int d) -> int
override sealed Zorglub.Time.Core.Schemas.Persian2820Schema.GetMonthParts(int monthsSinceEpoch, out int y, out int m) -> void
override sealed Zorglub.Time.Core.Schemas.Persian2820Schema.GetStartOfYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.Persian2820Schema.GetYear(int daysSinceEpoch) -> int
override sealed Zorglub.Time.Core.Schemas.Persian2820Schema.IsIntercalaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.Persian2820Schema.IsIntercalaryMonth(int y, int m) -> bool
override sealed Zorglub.Time.Core.Schemas.Persian2820Schema.IsLeapYear(int y) -> bool
override sealed Zorglub.Time.Core.Schemas.Persian2820Schema.IsSupplementaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.Persian2820Schema.PeriodicAdjustments.get -> Zorglub.Time.CalendricalAdjustments
override sealed Zorglub.Time.Core.Schemas.PositivistSchema.CountDaysInMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.PositivistSchema.CountDaysInYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.PositivistSchema.CountDaysInYearBeforeMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.PositivistSchema.CountDaysSinceEpoch(int y, int m, int d) -> int
override sealed Zorglub.Time.Core.Schemas.PositivistSchema.CountMonthsInYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.PositivistSchema.CountMonthsSinceEpoch(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.PositivistSchema.Family.get -> Zorglub.Time.CalendricalFamily
override sealed Zorglub.Time.Core.Schemas.PositivistSchema.GetDatePartsAtEndOfYear(int y, out int m, out int d) -> void
override sealed Zorglub.Time.Core.Schemas.PositivistSchema.GetMonth(int y, int doy, out int d) -> int
override sealed Zorglub.Time.Core.Schemas.PositivistSchema.GetMonthParts(int monthsSinceEpoch, out int y, out int m) -> void
override sealed Zorglub.Time.Core.Schemas.PositivistSchema.GetStartOfYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.PositivistSchema.GetYear(int daysSinceEpoch) -> int
override sealed Zorglub.Time.Core.Schemas.PositivistSchema.IsIntercalaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.PositivistSchema.IsIntercalaryMonth(int y, int m) -> bool
override sealed Zorglub.Time.Core.Schemas.PositivistSchema.IsLeapYear(int y) -> bool
override sealed Zorglub.Time.Core.Schemas.PositivistSchema.IsSupplementaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.PositivistSchema.PeriodicAdjustments.get -> Zorglub.Time.CalendricalAdjustments
override sealed Zorglub.Time.Core.Schemas.Tropicalia3031Schema.CountDaysInMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.Tropicalia3031Schema.CountDaysInYearBeforeMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.Tropicalia3031Schema.CountDaysSinceEpoch(int y, int m, int d) -> int
override sealed Zorglub.Time.Core.Schemas.Tropicalia3031Schema.GetDateParts(int daysSinceEpoch, out int y, out int m, out int d) -> void
override sealed Zorglub.Time.Core.Schemas.Tropicalia3031Schema.GetDatePartsAtEndOfYear(int y, out int m, out int d) -> void
override sealed Zorglub.Time.Core.Schemas.Tropicalia3031Schema.GetMonth(int y, int doy, out int d) -> int
override sealed Zorglub.Time.Core.Schemas.Tropicalia3031Schema.IsIntercalaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.Tropicalia3130Schema.CountDaysInMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.Tropicalia3130Schema.CountDaysInYearBeforeMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.Tropicalia3130Schema.CountDaysSinceEpoch(int y, int m, int d) -> int
override sealed Zorglub.Time.Core.Schemas.Tropicalia3130Schema.GetDateParts(int daysSinceEpoch, out int y, out int m, out int d) -> void
override sealed Zorglub.Time.Core.Schemas.Tropicalia3130Schema.GetDatePartsAtEndOfYear(int y, out int m, out int d) -> void
override sealed Zorglub.Time.Core.Schemas.Tropicalia3130Schema.GetMonth(int y, int doy, out int d) -> int
override sealed Zorglub.Time.Core.Schemas.Tropicalia3130Schema.IsIntercalaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.TropicaliaSchema.CountDaysInMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.TropicaliaSchema.CountDaysInYearBeforeMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.TropicaliaSchema.CountDaysSinceEpoch(int y, int m, int d) -> int
override sealed Zorglub.Time.Core.Schemas.TropicaliaSchema.GetDatePartsAtEndOfYear(int y, out int m, out int d) -> void
override sealed Zorglub.Time.Core.Schemas.TropicaliaSchema.GetMonth(int y, int doy, out int d) -> int
override sealed Zorglub.Time.Core.Schemas.TropicaliaSchema.IsIntercalaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.TropicalistaSchema.CountDaysInYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.TropicalistaSchema.CountMonthsInYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.TropicalistaSchema.CountMonthsSinceEpoch(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.TropicalistaSchema.Family.get -> Zorglub.Time.CalendricalFamily
override sealed Zorglub.Time.Core.Schemas.TropicalistaSchema.GetMonthParts(int monthsSinceEpoch, out int y, out int m) -> void
override sealed Zorglub.Time.Core.Schemas.TropicalistaSchema.GetStartOfYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.TropicalistaSchema.GetYear(int daysSinceEpoch) -> int
override sealed Zorglub.Time.Core.Schemas.TropicalistaSchema.IsIntercalaryMonth(int y, int m) -> bool
override sealed Zorglub.Time.Core.Schemas.TropicalistaSchema.IsLeapYear(int y) -> bool
override sealed Zorglub.Time.Core.Schemas.TropicalistaSchema.IsSupplementaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.TropicalistaSchema.PeriodicAdjustments.get -> Zorglub.Time.CalendricalAdjustments
override sealed Zorglub.Time.Core.Schemas.WorldSchema.CountDaysInMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.WorldSchema.CountDaysInYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.WorldSchema.CountDaysInYearBeforeMonth(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.WorldSchema.CountDaysSinceEpoch(int y, int m, int d) -> int
override sealed Zorglub.Time.Core.Schemas.WorldSchema.CountMonthsInYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.WorldSchema.CountMonthsSinceEpoch(int y, int m) -> int
override sealed Zorglub.Time.Core.Schemas.WorldSchema.Family.get -> Zorglub.Time.CalendricalFamily
override sealed Zorglub.Time.Core.Schemas.WorldSchema.GetDatePartsAtEndOfYear(int y, out int m, out int d) -> void
override sealed Zorglub.Time.Core.Schemas.WorldSchema.GetMonth(int y, int doy, out int d) -> int
override sealed Zorglub.Time.Core.Schemas.WorldSchema.GetMonthParts(int monthsSinceEpoch, out int y, out int m) -> void
override sealed Zorglub.Time.Core.Schemas.WorldSchema.GetStartOfYear(int y) -> int
override sealed Zorglub.Time.Core.Schemas.WorldSchema.GetYear(int daysSinceEpoch) -> int
override sealed Zorglub.Time.Core.Schemas.WorldSchema.IsIntercalaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.WorldSchema.IsIntercalaryMonth(int y, int m) -> bool
override sealed Zorglub.Time.Core.Schemas.WorldSchema.IsLeapYear(int y) -> bool
override sealed Zorglub.Time.Core.Schemas.WorldSchema.IsSupplementaryDay(int y, int m, int d) -> bool
override sealed Zorglub.Time.Core.Schemas.WorldSchema.PeriodicAdjustments.get -> Zorglub.Time.CalendricalAdjustments
override Zorglub.Time.Specialized.Armenian13Date.Equals(object? obj) -> bool
override Zorglub.Time.Specialized.Armenian13Date.GetHashCode() -> int
override Zorglub.Time.Specialized.Armenian13Date.ToString() -> string!
override Zorglub.Time.Specialized.ArmenianDate.Equals(object? obj) -> bool
override Zorglub.Time.Specialized.ArmenianDate.GetHashCode() -> int
override Zorglub.Time.Specialized.ArmenianDate.ToString() -> string!
override Zorglub.Time.Specialized.Coptic13Date.Equals(object? obj) -> bool
override Zorglub.Time.Specialized.Coptic13Date.GetHashCode() -> int
override Zorglub.Time.Specialized.Coptic13Date.ToString() -> string!
override Zorglub.Time.Specialized.CopticDate.Equals(object? obj) -> bool
override Zorglub.Time.Specialized.CopticDate.GetHashCode() -> int
override Zorglub.Time.Specialized.CopticDate.ToString() -> string!
override Zorglub.Time.Specialized.Ethiopic13Date.Equals(object? obj) -> bool
override Zorglub.Time.Specialized.Ethiopic13Date.GetHashCode() -> int
override Zorglub.Time.Specialized.Ethiopic13Date.ToString() -> string!
override Zorglub.Time.Specialized.EthiopicDate.Equals(object? obj) -> bool
override Zorglub.Time.Specialized.EthiopicDate.GetHashCode() -> int
override Zorglub.Time.Specialized.EthiopicDate.ToString() -> string!
override Zorglub.Time.Specialized.TabularIslamicDate.Equals(object? obj) -> bool
override Zorglub.Time.Specialized.TabularIslamicDate.GetHashCode() -> int
override Zorglub.Time.Specialized.TabularIslamicDate.ToString() -> string!
override Zorglub.Time.Specialized.WorldDate.Equals(object? obj) -> bool
override Zorglub.Time.Specialized.WorldDate.GetHashCode() -> int
override Zorglub.Time.Specialized.WorldDate.ToString() -> string!
override Zorglub.Time.Specialized.Zoroastrian13Date.Equals(object? obj) -> bool
override Zorglub.Time.Specialized.Zoroastrian13Date.GetHashCode() -> int
override Zorglub.Time.Specialized.Zoroastrian13Date.ToString() -> string!
override Zorglub.Time.Specialized.ZoroastrianDate.Equals(object? obj) -> bool
override Zorglub.Time.Specialized.ZoroastrianDate.GetHashCode() -> int
override Zorglub.Time.Specialized.ZoroastrianDate.ToString() -> string!
static Zorglub.Time.Core.Schemas.Coptic13Schema.GetInstance() -> Zorglub.Time.Core.Utilities.Box<Zorglub.Time.Core.Schemas.Coptic13Schema!>!
static Zorglub.Time.Core.Schemas.Egyptian13Schema.GetInstance() -> Zorglub.Time.Core.Utilities.Box<Zorglub.Time.Core.Schemas.Egyptian13Schema!>!
static Zorglub.Time.Core.Schemas.FrenchRepublican12Schema.GetInstance() -> Zorglub.Time.Core.Utilities.Box<Zorglub.Time.Core.Schemas.FrenchRepublican12Schema!>!
static Zorglub.Time.Core.Schemas.FrenchRepublican13Schema.GetInstance() -> Zorglub.Time.Core.Utilities.Box<Zorglub.Time.Core.Schemas.FrenchRepublican13Schema!>!
static Zorglub.Time.Core.Schemas.InternationalFixedSchema.GetInstance() -> Zorglub.Time.Core.Utilities.Box<Zorglub.Time.Core.Schemas.InternationalFixedSchema!>!
static Zorglub.Time.Core.Schemas.Persian2820Schema.GetInstance() -> Zorglub.Time.Core.Utilities.Box<Zorglub.Time.Core.Schemas.Persian2820Schema!>!
static Zorglub.Time.Core.Schemas.PositivistSchema.GetInstance() -> Zorglub.Time.Core.Utilities.Box<Zorglub.Time.Core.Schemas.PositivistSchema!>!
static Zorglub.Time.Core.Schemas.Tropicalia3031Schema.GetInstance() -> Zorglub.Time.Core.Utilities.Box<Zorglub.Time.Core.Schemas.Tropicalia3031Schema!>!
static Zorglub.Time.Core.Schemas.Tropicalia3130Schema.GetInstance() -> Zorglub.Time.Core.Utilities.Box<Zorglub.Time.Core.Schemas.Tropicalia3130Schema!>!
static Zorglub.Time.Core.Schemas.TropicaliaSchema.GetInstance() -> Zorglub.Time.Core.Utilities.Box<Zorglub.Time.Core.Schemas.TropicaliaSchema!>!
static Zorglub.Time.Core.Schemas.WorldSchema.GetInstance() -> Zorglub.Time.Core.Utilities.Box<Zorglub.Time.Core.Schemas.WorldSchema!>!
static Zorglub.Time.Specialized.Armenian13Date.Adjusters.get -> Zorglub.Time.Specialized.Armenian13Adjusters!
static Zorglub.Time.Specialized.Armenian13Date.Calendar.get -> Zorglub.Time.Specialized.Armenian13Calendar!
static Zorglub.Time.Specialized.Armenian13Date.Max(Zorglub.Time.Specialized.Armenian13Date x, Zorglub.Time.Specialized.Armenian13Date y) -> Zorglub.Time.Specialized.Armenian13Date
static Zorglub.Time.Specialized.Armenian13Date.MaxValue.get -> Zorglub.Time.Specialized.Armenian13Date
static Zorglub.Time.Specialized.Armenian13Date.Min(Zorglub.Time.Specialized.Armenian13Date x, Zorglub.Time.Specialized.Armenian13Date y) -> Zorglub.Time.Specialized.Armenian13Date
static Zorglub.Time.Specialized.Armenian13Date.MinValue.get -> Zorglub.Time.Specialized.Armenian13Date
static Zorglub.Time.Specialized.Armenian13Date.operator !=(Zorglub.Time.Specialized.Armenian13Date left, Zorglub.Time.Specialized.Armenian13Date right) -> bool
static Zorglub.Time.Specialized.Armenian13Date.operator +(Zorglub.Time.Specialized.Armenian13Date value, int days) -> Zorglub.Time.Specialized.Armenian13Date
static Zorglub.Time.Specialized.Armenian13Date.operator ++(Zorglub.Time.Specialized.Armenian13Date value) -> Zorglub.Time.Specialized.Armenian13Date
static Zorglub.Time.Specialized.Armenian13Date.operator -(Zorglub.Time.Specialized.Armenian13Date left, Zorglub.Time.Specialized.Armenian13Date right) -> int
static Zorglub.Time.Specialized.Armenian13Date.operator -(Zorglub.Time.Specialized.Armenian13Date value, int days) -> Zorglub.Time.Specialized.Armenian13Date
static Zorglub.Time.Specialized.Armenian13Date.operator --(Zorglub.Time.Specialized.Armenian13Date value) -> Zorglub.Time.Specialized.Armenian13Date
static Zorglub.Time.Specialized.Armenian13Date.operator <(Zorglub.Time.Specialized.Armenian13Date left, Zorglub.Time.Specialized.Armenian13Date right) -> bool
static Zorglub.Time.Specialized.Armenian13Date.operator <=(Zorglub.Time.Specialized.Armenian13Date left, Zorglub.Time.Specialized.Armenian13Date right) -> bool
static Zorglub.Time.Specialized.Armenian13Date.operator ==(Zorglub.Time.Specialized.Armenian13Date left, Zorglub.Time.Specialized.Armenian13Date right) -> bool
static Zorglub.Time.Specialized.Armenian13Date.operator >(Zorglub.Time.Specialized.Armenian13Date left, Zorglub.Time.Specialized.Armenian13Date right) -> bool
static Zorglub.Time.Specialized.Armenian13Date.operator >=(Zorglub.Time.Specialized.Armenian13Date left, Zorglub.Time.Specialized.Armenian13Date right) -> bool
static Zorglub.Time.Specialized.Armenian13Date.Today() -> Zorglub.Time.Specialized.Armenian13Date
static Zorglub.Time.Specialized.ArmenianDate.Adjusters.get -> Zorglub.Time.Specialized.ArmenianAdjusters!
static Zorglub.Time.Specialized.ArmenianDate.Calendar.get -> Zorglub.Time.Specialized.ArmenianCalendar!
static Zorglub.Time.Specialized.ArmenianDate.Max(Zorglub.Time.Specialized.ArmenianDate x, Zorglub.Time.Specialized.ArmenianDate y) -> Zorglub.Time.Specialized.ArmenianDate
static Zorglub.Time.Specialized.ArmenianDate.MaxValue.get -> Zorglub.Time.Specialized.ArmenianDate
static Zorglub.Time.Specialized.ArmenianDate.Min(Zorglub.Time.Specialized.ArmenianDate x, Zorglub.Time.Specialized.ArmenianDate y) -> Zorglub.Time.Specialized.ArmenianDate
static Zorglub.Time.Specialized.ArmenianDate.MinValue.get -> Zorglub.Time.Specialized.ArmenianDate
static Zorglub.Time.Specialized.ArmenianDate.operator !=(Zorglub.Time.Specialized.ArmenianDate left, Zorglub.Time.Specialized.ArmenianDate right) -> bool
static Zorglub.Time.Specialized.ArmenianDate.operator +(Zorglub.Time.Specialized.ArmenianDate value, int days) -> Zorglub.Time.Specialized.ArmenianDate
static Zorglub.Time.Specialized.ArmenianDate.operator ++(Zorglub.Time.Specialized.ArmenianDate value) -> Zorglub.Time.Specialized.ArmenianDate
static Zorglub.Time.Specialized.ArmenianDate.operator -(Zorglub.Time.Specialized.ArmenianDate left, Zorglub.Time.Specialized.ArmenianDate right) -> int
static Zorglub.Time.Specialized.ArmenianDate.operator -(Zorglub.Time.Specialized.ArmenianDate value, int days) -> Zorglub.Time.Specialized.ArmenianDate
static Zorglub.Time.Specialized.ArmenianDate.operator --(Zorglub.Time.Specialized.ArmenianDate value) -> Zorglub.Time.Specialized.ArmenianDate
static Zorglub.Time.Specialized.ArmenianDate.operator <(Zorglub.Time.Specialized.ArmenianDate left, Zorglub.Time.Specialized.ArmenianDate right) -> bool
static Zorglub.Time.Specialized.ArmenianDate.operator <=(Zorglub.Time.Specialized.ArmenianDate left, Zorglub.Time.Specialized.ArmenianDate right) -> bool
static Zorglub.Time.Specialized.ArmenianDate.operator ==(Zorglub.Time.Specialized.ArmenianDate left, Zorglub.Time.Specialized.ArmenianDate right) -> bool
static Zorglub.Time.Specialized.ArmenianDate.operator >(Zorglub.Time.Specialized.ArmenianDate left, Zorglub.Time.Specialized.ArmenianDate right) -> bool
static Zorglub.Time.Specialized.ArmenianDate.operator >=(Zorglub.Time.Specialized.ArmenianDate left, Zorglub.Time.Specialized.ArmenianDate right) -> bool
static Zorglub.Time.Specialized.ArmenianDate.Today() -> Zorglub.Time.Specialized.ArmenianDate
static Zorglub.Time.Specialized.Coptic13Date.Adjusters.get -> Zorglub.Time.Specialized.Coptic13Adjusters!
static Zorglub.Time.Specialized.Coptic13Date.Calendar.get -> Zorglub.Time.Specialized.Coptic13Calendar!
static Zorglub.Time.Specialized.Coptic13Date.Max(Zorglub.Time.Specialized.Coptic13Date x, Zorglub.Time.Specialized.Coptic13Date y) -> Zorglub.Time.Specialized.Coptic13Date
static Zorglub.Time.Specialized.Coptic13Date.MaxValue.get -> Zorglub.Time.Specialized.Coptic13Date
static Zorglub.Time.Specialized.Coptic13Date.Min(Zorglub.Time.Specialized.Coptic13Date x, Zorglub.Time.Specialized.Coptic13Date y) -> Zorglub.Time.Specialized.Coptic13Date
static Zorglub.Time.Specialized.Coptic13Date.MinValue.get -> Zorglub.Time.Specialized.Coptic13Date
static Zorglub.Time.Specialized.Coptic13Date.operator !=(Zorglub.Time.Specialized.Coptic13Date left, Zorglub.Time.Specialized.Coptic13Date right) -> bool
static Zorglub.Time.Specialized.Coptic13Date.operator +(Zorglub.Time.Specialized.Coptic13Date value, int days) -> Zorglub.Time.Specialized.Coptic13Date
static Zorglub.Time.Specialized.Coptic13Date.operator ++(Zorglub.Time.Specialized.Coptic13Date value) -> Zorglub.Time.Specialized.Coptic13Date
static Zorglub.Time.Specialized.Coptic13Date.operator -(Zorglub.Time.Specialized.Coptic13Date left, Zorglub.Time.Specialized.Coptic13Date right) -> int
static Zorglub.Time.Specialized.Coptic13Date.operator -(Zorglub.Time.Specialized.Coptic13Date value, int days) -> Zorglub.Time.Specialized.Coptic13Date
static Zorglub.Time.Specialized.Coptic13Date.operator --(Zorglub.Time.Specialized.Coptic13Date value) -> Zorglub.Time.Specialized.Coptic13Date
static Zorglub.Time.Specialized.Coptic13Date.operator <(Zorglub.Time.Specialized.Coptic13Date left, Zorglub.Time.Specialized.Coptic13Date right) -> bool
static Zorglub.Time.Specialized.Coptic13Date.operator <=(Zorglub.Time.Specialized.Coptic13Date left, Zorglub.Time.Specialized.Coptic13Date right) -> bool
static Zorglub.Time.Specialized.Coptic13Date.operator ==(Zorglub.Time.Specialized.Coptic13Date left, Zorglub.Time.Specialized.Coptic13Date right) -> bool
static Zorglub.Time.Specialized.Coptic13Date.operator >(Zorglub.Time.Specialized.Coptic13Date left, Zorglub.Time.Specialized.Coptic13Date right) -> bool
static Zorglub.Time.Specialized.Coptic13Date.operator >=(Zorglub.Time.Specialized.Coptic13Date left, Zorglub.Time.Specialized.Coptic13Date right) -> bool
static Zorglub.Time.Specialized.Coptic13Date.Today() -> Zorglub.Time.Specialized.Coptic13Date
static Zorglub.Time.Specialized.CopticDate.Adjusters.get -> Zorglub.Time.Specialized.CopticAdjusters!
static Zorglub.Time.Specialized.CopticDate.Calendar.get -> Zorglub.Time.Specialized.CopticCalendar!
static Zorglub.Time.Specialized.CopticDate.Max(Zorglub.Time.Specialized.CopticDate x, Zorglub.Time.Specialized.CopticDate y) -> Zorglub.Time.Specialized.CopticDate
static Zorglub.Time.Specialized.CopticDate.MaxValue.get -> Zorglub.Time.Specialized.CopticDate
static Zorglub.Time.Specialized.CopticDate.Min(Zorglub.Time.Specialized.CopticDate x, Zorglub.Time.Specialized.CopticDate y) -> Zorglub.Time.Specialized.CopticDate
static Zorglub.Time.Specialized.CopticDate.MinValue.get -> Zorglub.Time.Specialized.CopticDate
static Zorglub.Time.Specialized.CopticDate.operator !=(Zorglub.Time.Specialized.CopticDate left, Zorglub.Time.Specialized.CopticDate right) -> bool
static Zorglub.Time.Specialized.CopticDate.operator +(Zorglub.Time.Specialized.CopticDate value, int days) -> Zorglub.Time.Specialized.CopticDate
static Zorglub.Time.Specialized.CopticDate.operator ++(Zorglub.Time.Specialized.CopticDate value) -> Zorglub.Time.Specialized.CopticDate
static Zorglub.Time.Specialized.CopticDate.operator -(Zorglub.Time.Specialized.CopticDate left, Zorglub.Time.Specialized.CopticDate right) -> int
static Zorglub.Time.Specialized.CopticDate.operator -(Zorglub.Time.Specialized.CopticDate value, int days) -> Zorglub.Time.Specialized.CopticDate
static Zorglub.Time.Specialized.CopticDate.operator --(Zorglub.Time.Specialized.CopticDate value) -> Zorglub.Time.Specialized.CopticDate
static Zorglub.Time.Specialized.CopticDate.operator <(Zorglub.Time.Specialized.CopticDate left, Zorglub.Time.Specialized.CopticDate right) -> bool
static Zorglub.Time.Specialized.CopticDate.operator <=(Zorglub.Time.Specialized.CopticDate left, Zorglub.Time.Specialized.CopticDate right) -> bool
static Zorglub.Time.Specialized.CopticDate.operator ==(Zorglub.Time.Specialized.CopticDate left, Zorglub.Time.Specialized.CopticDate right) -> bool
static Zorglub.Time.Specialized.CopticDate.operator >(Zorglub.Time.Specialized.CopticDate left, Zorglub.Time.Specialized.CopticDate right) -> bool
static Zorglub.Time.Specialized.CopticDate.operator >=(Zorglub.Time.Specialized.CopticDate left, Zorglub.Time.Specialized.CopticDate right) -> bool
static Zorglub.Time.Specialized.CopticDate.Today() -> Zorglub.Time.Specialized.CopticDate
static Zorglub.Time.Specialized.Ethiopic13Date.Adjusters.get -> Zorglub.Time.Specialized.Ethiopic13Adjusters!
static Zorglub.Time.Specialized.Ethiopic13Date.Calendar.get -> Zorglub.Time.Specialized.Ethiopic13Calendar!
static Zorglub.Time.Specialized.Ethiopic13Date.Max(Zorglub.Time.Specialized.Ethiopic13Date x, Zorglub.Time.Specialized.Ethiopic13Date y) -> Zorglub.Time.Specialized.Ethiopic13Date
static Zorglub.Time.Specialized.Ethiopic13Date.MaxValue.get -> Zorglub.Time.Specialized.Ethiopic13Date
static Zorglub.Time.Specialized.Ethiopic13Date.Min(Zorglub.Time.Specialized.Ethiopic13Date x, Zorglub.Time.Specialized.Ethiopic13Date y) -> Zorglub.Time.Specialized.Ethiopic13Date
static Zorglub.Time.Specialized.Ethiopic13Date.MinValue.get -> Zorglub.Time.Specialized.Ethiopic13Date
static Zorglub.Time.Specialized.Ethiopic13Date.operator !=(Zorglub.Time.Specialized.Ethiopic13Date left, Zorglub.Time.Specialized.Ethiopic13Date right) -> bool
static Zorglub.Time.Specialized.Ethiopic13Date.operator +(Zorglub.Time.Specialized.Ethiopic13Date value, int days) -> Zorglub.Time.Specialized.Ethiopic13Date
static Zorglub.Time.Specialized.Ethiopic13Date.operator ++(Zorglub.Time.Specialized.Ethiopic13Date value) -> Zorglub.Time.Specialized.Ethiopic13Date
static Zorglub.Time.Specialized.Ethiopic13Date.operator -(Zorglub.Time.Specialized.Ethiopic13Date left, Zorglub.Time.Specialized.Ethiopic13Date right) -> int
static Zorglub.Time.Specialized.Ethiopic13Date.operator -(Zorglub.Time.Specialized.Ethiopic13Date value, int days) -> Zorglub.Time.Specialized.Ethiopic13Date
static Zorglub.Time.Specialized.Ethiopic13Date.operator --(Zorglub.Time.Specialized.Ethiopic13Date value) -> Zorglub.Time.Specialized.Ethiopic13Date
static Zorglub.Time.Specialized.Ethiopic13Date.operator <(Zorglub.Time.Specialized.Ethiopic13Date left, Zorglub.Time.Specialized.Ethiopic13Date right) -> bool
static Zorglub.Time.Specialized.Ethiopic13Date.operator <=(Zorglub.Time.Specialized.Ethiopic13Date left, Zorglub.Time.Specialized.Ethiopic13Date right) -> bool
static Zorglub.Time.Specialized.Ethiopic13Date.operator ==(Zorglub.Time.Specialized.Ethiopic13Date left, Zorglub.Time.Specialized.Ethiopic13Date right) -> bool
static Zorglub.Time.Specialized.Ethiopic13Date.operator >(Zorglub.Time.Specialized.Ethiopic13Date left, Zorglub.Time.Specialized.Ethiopic13Date right) -> bool
static Zorglub.Time.Specialized.Ethiopic13Date.operator >=(Zorglub.Time.Specialized.Ethiopic13Date left, Zorglub.Time.Specialized.Ethiopic13Date right) -> bool
static Zorglub.Time.Specialized.Ethiopic13Date.Today() -> Zorglub.Time.Specialized.Ethiopic13Date
static Zorglub.Time.Specialized.EthiopicDate.Adjusters.get -> Zorglub.Time.Specialized.EthiopicAdjusters!
static Zorglub.Time.Specialized.EthiopicDate.Calendar.get -> Zorglub.Time.Specialized.EthiopicCalendar!
static Zorglub.Time.Specialized.EthiopicDate.Max(Zorglub.Time.Specialized.EthiopicDate x, Zorglub.Time.Specialized.EthiopicDate y) -> Zorglub.Time.Specialized.EthiopicDate
static Zorglub.Time.Specialized.EthiopicDate.MaxValue.get -> Zorglub.Time.Specialized.EthiopicDate
static Zorglub.Time.Specialized.EthiopicDate.Min(Zorglub.Time.Specialized.EthiopicDate x, Zorglub.Time.Specialized.EthiopicDate y) -> Zorglub.Time.Specialized.EthiopicDate
static Zorglub.Time.Specialized.EthiopicDate.MinValue.get -> Zorglub.Time.Specialized.EthiopicDate
static Zorglub.Time.Specialized.EthiopicDate.operator !=(Zorglub.Time.Specialized.EthiopicDate left, Zorglub.Time.Specialized.EthiopicDate right) -> bool
static Zorglub.Time.Specialized.EthiopicDate.operator +(Zorglub.Time.Specialized.EthiopicDate value, int days) -> Zorglub.Time.Specialized.EthiopicDate
static Zorglub.Time.Specialized.EthiopicDate.operator ++(Zorglub.Time.Specialized.EthiopicDate value) -> Zorglub.Time.Specialized.EthiopicDate
static Zorglub.Time.Specialized.EthiopicDate.operator -(Zorglub.Time.Specialized.EthiopicDate left, Zorglub.Time.Specialized.EthiopicDate right) -> int
static Zorglub.Time.Specialized.EthiopicDate.operator -(Zorglub.Time.Specialized.EthiopicDate value, int days) -> Zorglub.Time.Specialized.EthiopicDate
static Zorglub.Time.Specialized.EthiopicDate.operator --(Zorglub.Time.Specialized.EthiopicDate value) -> Zorglub.Time.Specialized.EthiopicDate
static Zorglub.Time.Specialized.EthiopicDate.operator <(Zorglub.Time.Specialized.EthiopicDate left, Zorglub.Time.Specialized.EthiopicDate right) -> bool
static Zorglub.Time.Specialized.EthiopicDate.operator <=(Zorglub.Time.Specialized.EthiopicDate left, Zorglub.Time.Specialized.EthiopicDate right) -> bool
static Zorglub.Time.Specialized.EthiopicDate.operator ==(Zorglub.Time.Specialized.EthiopicDate left, Zorglub.Time.Specialized.EthiopicDate right) -> bool
static Zorglub.Time.Specialized.EthiopicDate.operator >(Zorglub.Time.Specialized.EthiopicDate left, Zorglub.Time.Specialized.EthiopicDate right) -> bool
static Zorglub.Time.Specialized.EthiopicDate.operator >=(Zorglub.Time.Specialized.EthiopicDate left, Zorglub.Time.Specialized.EthiopicDate right) -> bool
static Zorglub.Time.Specialized.EthiopicDate.Today() -> Zorglub.Time.Specialized.EthiopicDate
static Zorglub.Time.Specialized.TabularIslamicDate.Adjusters.get -> Zorglub.Time.Specialized.TabularIslamicAdjusters!
static Zorglub.Time.Specialized.TabularIslamicDate.Calendar.get -> Zorglub.Time.Specialized.TabularIslamicCalendar!
static Zorglub.Time.Specialized.TabularIslamicDate.Max(Zorglub.Time.Specialized.TabularIslamicDate x, Zorglub.Time.Specialized.TabularIslamicDate y) -> Zorglub.Time.Specialized.TabularIslamicDate
static Zorglub.Time.Specialized.TabularIslamicDate.MaxValue.get -> Zorglub.Time.Specialized.TabularIslamicDate
static Zorglub.Time.Specialized.TabularIslamicDate.Min(Zorglub.Time.Specialized.TabularIslamicDate x, Zorglub.Time.Specialized.TabularIslamicDate y) -> Zorglub.Time.Specialized.TabularIslamicDate
static Zorglub.Time.Specialized.TabularIslamicDate.MinValue.get -> Zorglub.Time.Specialized.TabularIslamicDate
static Zorglub.Time.Specialized.TabularIslamicDate.operator !=(Zorglub.Time.Specialized.TabularIslamicDate left, Zorglub.Time.Specialized.TabularIslamicDate right) -> bool
static Zorglub.Time.Specialized.TabularIslamicDate.operator +(Zorglub.Time.Specialized.TabularIslamicDate value, int days) -> Zorglub.Time.Specialized.TabularIslamicDate
static Zorglub.Time.Specialized.TabularIslamicDate.operator ++(Zorglub.Time.Specialized.TabularIslamicDate value) -> Zorglub.Time.Specialized.TabularIslamicDate
static Zorglub.Time.Specialized.TabularIslamicDate.operator -(Zorglub.Time.Specialized.TabularIslamicDate left, Zorglub.Time.Specialized.TabularIslamicDate right) -> int
static Zorglub.Time.Specialized.TabularIslamicDate.operator -(Zorglub.Time.Specialized.TabularIslamicDate value, int days) -> Zorglub.Time.Specialized.TabularIslamicDate
static Zorglub.Time.Specialized.TabularIslamicDate.operator --(Zorglub.Time.Specialized.TabularIslamicDate value) -> Zorglub.Time.Specialized.TabularIslamicDate
static Zorglub.Time.Specialized.TabularIslamicDate.operator <(Zorglub.Time.Specialized.TabularIslamicDate left, Zorglub.Time.Specialized.TabularIslamicDate right) -> bool
static Zorglub.Time.Specialized.TabularIslamicDate.operator <=(Zorglub.Time.Specialized.TabularIslamicDate left, Zorglub.Time.Specialized.TabularIslamicDate right) -> bool
static Zorglub.Time.Specialized.TabularIslamicDate.operator ==(Zorglub.Time.Specialized.TabularIslamicDate left, Zorglub.Time.Specialized.TabularIslamicDate right) -> bool
static Zorglub.Time.Specialized.TabularIslamicDate.operator >(Zorglub.Time.Specialized.TabularIslamicDate left, Zorglub.Time.Specialized.TabularIslamicDate right) -> bool
static Zorglub.Time.Specialized.TabularIslamicDate.operator >=(Zorglub.Time.Specialized.TabularIslamicDate left, Zorglub.Time.Specialized.TabularIslamicDate right) -> bool
static Zorglub.Time.Specialized.TabularIslamicDate.Today() -> Zorglub.Time.Specialized.TabularIslamicDate
static Zorglub.Time.Specialized.WorldDate.Adjusters.get -> Zorglub.Time.Specialized.WorldAdjusters!
static Zorglub.Time.Specialized.WorldDate.Calendar.get -> Zorglub.Time.Specialized.WorldCalendar!
static Zorglub.Time.Specialized.WorldDate.Max(Zorglub.Time.Specialized.WorldDate x, Zorglub.Time.Specialized.WorldDate y) -> Zorglub.Time.Specialized.WorldDate
static Zorglub.Time.Specialized.WorldDate.MaxValue.get -> Zorglub.Time.Specialized.WorldDate
static Zorglub.Time.Specialized.WorldDate.Min(Zorglub.Time.Specialized.WorldDate x, Zorglub.Time.Specialized.WorldDate y) -> Zorglub.Time.Specialized.WorldDate
static Zorglub.Time.Specialized.WorldDate.MinValue.get -> Zorglub.Time.Specialized.WorldDate
static Zorglub.Time.Specialized.WorldDate.operator !=(Zorglub.Time.Specialized.WorldDate left, Zorglub.Time.Specialized.WorldDate right) -> bool
static Zorglub.Time.Specialized.WorldDate.operator +(Zorglub.Time.Specialized.WorldDate value, int days) -> Zorglub.Time.Specialized.WorldDate
static Zorglub.Time.Specialized.WorldDate.operator ++(Zorglub.Time.Specialized.WorldDate value) -> Zorglub.Time.Specialized.WorldDate
static Zorglub.Time.Specialized.WorldDate.operator -(Zorglub.Time.Specialized.WorldDate left, Zorglub.Time.Specialized.WorldDate right) -> int
static Zorglub.Time.Specialized.WorldDate.operator -(Zorglub.Time.Specialized.WorldDate value, int days) -> Zorglub.Time.Specialized.WorldDate
static Zorglub.Time.Specialized.WorldDate.operator --(Zorglub.Time.Specialized.WorldDate value) -> Zorglub.Time.Specialized.WorldDate
static Zorglub.Time.Specialized.WorldDate.operator <(Zorglub.Time.Specialized.WorldDate left, Zorglub.Time.Specialized.WorldDate right) -> bool
static Zorglub.Time.Specialized.WorldDate.operator <=(Zorglub.Time.Specialized.WorldDate left, Zorglub.Time.Specialized.WorldDate right) -> bool
static Zorglub.Time.Specialized.WorldDate.operator ==(Zorglub.Time.Specialized.WorldDate left, Zorglub.Time.Specialized.WorldDate right) -> bool
static Zorglub.Time.Specialized.WorldDate.operator >(Zorglub.Time.Specialized.WorldDate left, Zorglub.Time.Specialized.WorldDate right) -> bool
static Zorglub.Time.Specialized.WorldDate.operator >=(Zorglub.Time.Specialized.WorldDate left, Zorglub.Time.Specialized.WorldDate right) -> bool
static Zorglub.Time.Specialized.WorldDate.Today() -> Zorglub.Time.Specialized.WorldDate
static Zorglub.Time.Specialized.Zoroastrian13Date.Adjusters.get -> Zorglub.Time.Specialized.Zoroastrian13Adjusters!
static Zorglub.Time.Specialized.Zoroastrian13Date.Calendar.get -> Zorglub.Time.Specialized.Zoroastrian13Calendar!
static Zorglub.Time.Specialized.Zoroastrian13Date.Max(Zorglub.Time.Specialized.Zoroastrian13Date x, Zorglub.Time.Specialized.Zoroastrian13Date y) -> Zorglub.Time.Specialized.Zoroastrian13Date
static Zorglub.Time.Specialized.Zoroastrian13Date.MaxValue.get -> Zorglub.Time.Specialized.Zoroastrian13Date
static Zorglub.Time.Specialized.Zoroastrian13Date.Min(Zorglub.Time.Specialized.Zoroastrian13Date x, Zorglub.Time.Specialized.Zoroastrian13Date y) -> Zorglub.Time.Specialized.Zoroastrian13Date
static Zorglub.Time.Specialized.Zoroastrian13Date.MinValue.get -> Zorglub.Time.Specialized.Zoroastrian13Date
static Zorglub.Time.Specialized.Zoroastrian13Date.operator !=(Zorglub.Time.Specialized.Zoroastrian13Date left, Zorglub.Time.Specialized.Zoroastrian13Date right) -> bool
static Zorglub.Time.Specialized.Zoroastrian13Date.operator +(Zorglub.Time.Specialized.Zoroastrian13Date value, int days) -> Zorglub.Time.Specialized.Zoroastrian13Date
static Zorglub.Time.Specialized.Zoroastrian13Date.operator ++(Zorglub.Time.Specialized.Zoroastrian13Date value) -> Zorglub.Time.Specialized.Zoroastrian13Date
static Zorglub.Time.Specialized.Zoroastrian13Date.operator -(Zorglub.Time.Specialized.Zoroastrian13Date left, Zorglub.Time.Specialized.Zoroastrian13Date right) -> int
static Zorglub.Time.Specialized.Zoroastrian13Date.operator -(Zorglub.Time.Specialized.Zoroastrian13Date value, int days) -> Zorglub.Time.Specialized.Zoroastrian13Date
static Zorglub.Time.Specialized.Zoroastrian13Date.operator --(Zorglub.Time.Specialized.Zoroastrian13Date value) -> Zorglub.Time.Specialized.Zoroastrian13Date
static Zorglub.Time.Specialized.Zoroastrian13Date.operator <(Zorglub.Time.Specialized.Zoroastrian13Date left, Zorglub.Time.Specialized.Zoroastrian13Date right) -> bool
static Zorglub.Time.Specialized.Zoroastrian13Date.operator <=(Zorglub.Time.Specialized.Zoroastrian13Date left, Zorglub.Time.Specialized.Zoroastrian13Date right) -> bool
static Zorglub.Time.Specialized.Zoroastrian13Date.operator ==(Zorglub.Time.Specialized.Zoroastrian13Date left, Zorglub.Time.Specialized.Zoroastrian13Date right) -> bool
static Zorglub.Time.Specialized.Zoroastrian13Date.operator >(Zorglub.Time.Specialized.Zoroastrian13Date left, Zorglub.Time.Specialized.Zoroastrian13Date right) -> bool
static Zorglub.Time.Specialized.Zoroastrian13Date.operator >=(Zorglub.Time.Specialized.Zoroastrian13Date left, Zorglub.Time.Specialized.Zoroastrian13Date right) -> bool
static Zorglub.Time.Specialized.Zoroastrian13Date.Today() -> Zorglub.Time.Specialized.Zoroastrian13Date
static Zorglub.Time.Specialized.ZoroastrianDate.Adjusters.get -> Zorglub.Time.Specialized.ZoroastrianAdjusters!
static Zorglub.Time.Specialized.ZoroastrianDate.Calendar.get -> Zorglub.Time.Specialized.ZoroastrianCalendar!
static Zorglub.Time.Specialized.ZoroastrianDate.Max(Zorglub.Time.Specialized.ZoroastrianDate x, Zorglub.Time.Specialized.ZoroastrianDate y) -> Zorglub.Time.Specialized.ZoroastrianDate
static Zorglub.Time.Specialized.ZoroastrianDate.MaxValue.get -> Zorglub.Time.Specialized.ZoroastrianDate
static Zorglub.Time.Specialized.ZoroastrianDate.Min(Zorglub.Time.Specialized.ZoroastrianDate x, Zorglub.Time.Specialized.ZoroastrianDate y) -> Zorglub.Time.Specialized.ZoroastrianDate
static Zorglub.Time.Specialized.ZoroastrianDate.MinValue.get -> Zorglub.Time.Specialized.ZoroastrianDate
static Zorglub.Time.Specialized.ZoroastrianDate.operator !=(Zorglub.Time.Specialized.ZoroastrianDate left, Zorglub.Time.Specialized.ZoroastrianDate right) -> bool
static Zorglub.Time.Specialized.ZoroastrianDate.operator +(Zorglub.Time.Specialized.ZoroastrianDate value, int days) -> Zorglub.Time.Specialized.ZoroastrianDate
static Zorglub.Time.Specialized.ZoroastrianDate.operator ++(Zorglub.Time.Specialized.ZoroastrianDate value) -> Zorglub.Time.Specialized.ZoroastrianDate
static Zorglub.Time.Specialized.ZoroastrianDate.operator -(Zorglub.Time.Specialized.ZoroastrianDate left, Zorglub.Time.Specialized.ZoroastrianDate right) -> int
static Zorglub.Time.Specialized.ZoroastrianDate.operator -(Zorglub.Time.Specialized.ZoroastrianDate value, int days) -> Zorglub.Time.Specialized.ZoroastrianDate
static Zorglub.Time.Specialized.ZoroastrianDate.operator --(Zorglub.Time.Specialized.ZoroastrianDate value) -> Zorglub.Time.Specialized.ZoroastrianDate
static Zorglub.Time.Specialized.ZoroastrianDate.operator <(Zorglub.Time.Specialized.ZoroastrianDate left, Zorglub.Time.Specialized.ZoroastrianDate right) -> bool
static Zorglub.Time.Specialized.ZoroastrianDate.operator <=(Zorglub.Time.Specialized.ZoroastrianDate left, Zorglub.Time.Specialized.ZoroastrianDate right) -> bool
static Zorglub.Time.Specialized.ZoroastrianDate.operator ==(Zorglub.Time.Specialized.ZoroastrianDate left, Zorglub.Time.Specialized.ZoroastrianDate right) -> bool
static Zorglub.Time.Specialized.ZoroastrianDate.operator >(Zorglub.Time.Specialized.ZoroastrianDate left, Zorglub.Time.Specialized.ZoroastrianDate right) -> bool
static Zorglub.Time.Specialized.ZoroastrianDate.operator >=(Zorglub.Time.Specialized.ZoroastrianDate left, Zorglub.Time.Specialized.ZoroastrianDate right) -> bool
static Zorglub.Time.Specialized.ZoroastrianDate.Today() -> Zorglub.Time.Specialized.ZoroastrianDate
Zorglub.Time.Core.Schemas.Coptic13Schema
Zorglub.Time.Core.Schemas.Coptic13Schema.IsEpagomenalDay(int y, int m, int d, out int epagomenalNumber) -> bool
Zorglub.Time.Core.Schemas.Coptic13Schema.VirtualMonth.get -> int
Zorglub.Time.Core.Schemas.Egyptian13Schema
Zorglub.Time.Core.Schemas.Egyptian13Schema.IsEpagomenalDay(int y, int m, int d, out int epagomenalNumber) -> bool
Zorglub.Time.Core.Schemas.Egyptian13Schema.VirtualMonth.get -> int
Zorglub.Time.Core.Schemas.FrenchRepublican12Schema
Zorglub.Time.Core.Schemas.FrenchRepublican12Schema.IsEpagomenalDay(int y, int m, int d, out int epagomenalNumber) -> bool
Zorglub.Time.Core.Schemas.FrenchRepublican13Schema
Zorglub.Time.Core.Schemas.FrenchRepublican13Schema.IsEpagomenalDay(int y, int m, int d, out int epagomenalNumber) -> bool
Zorglub.Time.Core.Schemas.FrenchRepublican13Schema.VirtualMonth.get -> int
Zorglub.Time.Core.Schemas.FrenchRepublicanSchema
Zorglub.Time.Core.Schemas.InternationalFixedSchema
Zorglub.Time.Core.Schemas.InternationalFixedSchema.IsBlankDay(int y, int m, int d) -> bool
Zorglub.Time.Core.Schemas.InternationalFixedSchema.MonthsInYear.get -> int
Zorglub.Time.Core.Schemas.Persian2820Schema
Zorglub.Time.Core.Schemas.Persian2820Schema.MonthsInYear.get -> int
Zorglub.Time.Core.Schemas.PositivistSchema
Zorglub.Time.Core.Schemas.PositivistSchema.IsBlankDay(int y, int m, int d) -> bool
Zorglub.Time.Core.Schemas.PositivistSchema.MonthsInYear.get -> int
Zorglub.Time.Core.Schemas.Tropicalia3031Schema
Zorglub.Time.Core.Schemas.Tropicalia3130Schema
Zorglub.Time.Core.Schemas.TropicaliaSchema
Zorglub.Time.Core.Schemas.TropicalistaSchema
Zorglub.Time.Core.Schemas.TropicalistaSchema.MonthsInYear.get -> int
Zorglub.Time.Core.Schemas.WorldSchema
Zorglub.Time.Core.Schemas.WorldSchema.IsBlankDay(int y, int m, int d) -> bool
Zorglub.Time.Core.Schemas.WorldSchema.MonthsInYear.get -> int
Zorglub.Time.Specialized.Armenian13Adjusters
Zorglub.Time.Specialized.Armenian13Adjusters.Armenian13Adjusters() -> void
Zorglub.Time.Specialized.Armenian13Calendar
Zorglub.Time.Specialized.Armenian13Calendar.Armenian13Calendar() -> void
Zorglub.Time.Specialized.Armenian13Calendar.MonthsInYear.get -> int
Zorglub.Time.Specialized.Armenian13Calendar.VirtualMonth.get -> int
Zorglub.Time.Specialized.Armenian13Date
Zorglub.Time.Specialized.Armenian13Date.Armenian13Date() -> void
Zorglub.Time.Specialized.Armenian13Date.Armenian13Date(int year, int dayOfYear) -> void
Zorglub.Time.Specialized.Armenian13Date.Armenian13Date(int year, int month, int day) -> void
Zorglub.Time.Specialized.Armenian13Date.Armenian13Date(Zorglub.Time.DayNumber dayNumber) -> void
Zorglub.Time.Specialized.Armenian13Date.Century.get -> int
Zorglub.Time.Specialized.Armenian13Date.CenturyOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.Armenian13Date.CompareTo(object? obj) -> int
Zorglub.Time.Specialized.Armenian13Date.CompareTo(Zorglub.Time.Specialized.Armenian13Date other) -> int
Zorglub.Time.Specialized.Armenian13Date.CountDaysSince(Zorglub.Time.Specialized.Armenian13Date other) -> int
Zorglub.Time.Specialized.Armenian13Date.CountElapsedDaysInMonth() -> int
Zorglub.Time.Specialized.Armenian13Date.CountElapsedDaysInYear() -> int
Zorglub.Time.Specialized.Armenian13Date.CountRemainingDaysInMonth() -> int
Zorglub.Time.Specialized.Armenian13Date.CountRemainingDaysInYear() -> int
Zorglub.Time.Specialized.Armenian13Date.Day.get -> int
Zorglub.Time.Specialized.Armenian13Date.DayNumber.get -> Zorglub.Time.DayNumber
Zorglub.Time.Specialized.Armenian13Date.DayOfWeek.get -> System.DayOfWeek
Zorglub.Time.Specialized.Armenian13Date.DayOfYear.get -> int
Zorglub.Time.Specialized.Armenian13Date.DaysSinceEpoch.get -> int
Zorglub.Time.Specialized.Armenian13Date.Deconstruct(out int year, out int dayOfYear) -> void
Zorglub.Time.Specialized.Armenian13Date.Deconstruct(out int year, out int month, out int day) -> void
Zorglub.Time.Specialized.Armenian13Date.Equals(Zorglub.Time.Specialized.Armenian13Date other) -> bool
Zorglub.Time.Specialized.Armenian13Date.IsEpagomenal(out int epagomenalNumber) -> bool
Zorglub.Time.Specialized.Armenian13Date.IsIntercalary.get -> bool
Zorglub.Time.Specialized.Armenian13Date.IsSupplementary.get -> bool
Zorglub.Time.Specialized.Armenian13Date.Month.get -> int
Zorglub.Time.Specialized.Armenian13Date.Nearest(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Armenian13Date
Zorglub.Time.Specialized.Armenian13Date.Next(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Armenian13Date
Zorglub.Time.Specialized.Armenian13Date.NextDay() -> Zorglub.Time.Specialized.Armenian13Date
Zorglub.Time.Specialized.Armenian13Date.NextOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Armenian13Date
Zorglub.Time.Specialized.Armenian13Date.PlusDays(int days) -> Zorglub.Time.Specialized.Armenian13Date
Zorglub.Time.Specialized.Armenian13Date.Previous(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Armenian13Date
Zorglub.Time.Specialized.Armenian13Date.PreviousDay() -> Zorglub.Time.Specialized.Armenian13Date
Zorglub.Time.Specialized.Armenian13Date.PreviousOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Armenian13Date
Zorglub.Time.Specialized.Armenian13Date.Year.get -> int
Zorglub.Time.Specialized.Armenian13Date.YearOfCentury.get -> int
Zorglub.Time.Specialized.Armenian13Date.YearOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.ArmenianAdjusters
Zorglub.Time.Specialized.ArmenianAdjusters.ArmenianAdjusters() -> void
Zorglub.Time.Specialized.ArmenianCalendar
Zorglub.Time.Specialized.ArmenianCalendar.ArmenianCalendar() -> void
Zorglub.Time.Specialized.ArmenianCalendar.MonthsInYear.get -> int
Zorglub.Time.Specialized.ArmenianDate
Zorglub.Time.Specialized.ArmenianDate.ArmenianDate() -> void
Zorglub.Time.Specialized.ArmenianDate.ArmenianDate(int year, int dayOfYear) -> void
Zorglub.Time.Specialized.ArmenianDate.ArmenianDate(int year, int month, int day) -> void
Zorglub.Time.Specialized.ArmenianDate.ArmenianDate(Zorglub.Time.DayNumber dayNumber) -> void
Zorglub.Time.Specialized.ArmenianDate.Century.get -> int
Zorglub.Time.Specialized.ArmenianDate.CenturyOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.ArmenianDate.CompareTo(object? obj) -> int
Zorglub.Time.Specialized.ArmenianDate.CompareTo(Zorglub.Time.Specialized.ArmenianDate other) -> int
Zorglub.Time.Specialized.ArmenianDate.CountDaysSince(Zorglub.Time.Specialized.ArmenianDate other) -> int
Zorglub.Time.Specialized.ArmenianDate.CountElapsedDaysInMonth() -> int
Zorglub.Time.Specialized.ArmenianDate.CountElapsedDaysInYear() -> int
Zorglub.Time.Specialized.ArmenianDate.CountRemainingDaysInMonth() -> int
Zorglub.Time.Specialized.ArmenianDate.CountRemainingDaysInYear() -> int
Zorglub.Time.Specialized.ArmenianDate.Day.get -> int
Zorglub.Time.Specialized.ArmenianDate.DayNumber.get -> Zorglub.Time.DayNumber
Zorglub.Time.Specialized.ArmenianDate.DayOfWeek.get -> System.DayOfWeek
Zorglub.Time.Specialized.ArmenianDate.DayOfYear.get -> int
Zorglub.Time.Specialized.ArmenianDate.DaysSinceEpoch.get -> int
Zorglub.Time.Specialized.ArmenianDate.Deconstruct(out int year, out int dayOfYear) -> void
Zorglub.Time.Specialized.ArmenianDate.Deconstruct(out int year, out int month, out int day) -> void
Zorglub.Time.Specialized.ArmenianDate.Equals(Zorglub.Time.Specialized.ArmenianDate other) -> bool
Zorglub.Time.Specialized.ArmenianDate.IsEpagomenal(out int epagomenalNumber) -> bool
Zorglub.Time.Specialized.ArmenianDate.IsIntercalary.get -> bool
Zorglub.Time.Specialized.ArmenianDate.IsSupplementary.get -> bool
Zorglub.Time.Specialized.ArmenianDate.Month.get -> int
Zorglub.Time.Specialized.ArmenianDate.Nearest(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.ArmenianDate
Zorglub.Time.Specialized.ArmenianDate.Next(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.ArmenianDate
Zorglub.Time.Specialized.ArmenianDate.NextDay() -> Zorglub.Time.Specialized.ArmenianDate
Zorglub.Time.Specialized.ArmenianDate.NextOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.ArmenianDate
Zorglub.Time.Specialized.ArmenianDate.PlusDays(int days) -> Zorglub.Time.Specialized.ArmenianDate
Zorglub.Time.Specialized.ArmenianDate.Previous(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.ArmenianDate
Zorglub.Time.Specialized.ArmenianDate.PreviousDay() -> Zorglub.Time.Specialized.ArmenianDate
Zorglub.Time.Specialized.ArmenianDate.PreviousOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.ArmenianDate
Zorglub.Time.Specialized.ArmenianDate.Year.get -> int
Zorglub.Time.Specialized.ArmenianDate.YearOfCentury.get -> int
Zorglub.Time.Specialized.ArmenianDate.YearOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.Coptic13Adjusters
Zorglub.Time.Specialized.Coptic13Adjusters.Coptic13Adjusters() -> void
Zorglub.Time.Specialized.Coptic13Calendar
Zorglub.Time.Specialized.Coptic13Calendar.Coptic13Calendar() -> void
Zorglub.Time.Specialized.Coptic13Calendar.MonthsInYear.get -> int
Zorglub.Time.Specialized.Coptic13Calendar.VirtualMonth.get -> int
Zorglub.Time.Specialized.Coptic13Date
Zorglub.Time.Specialized.Coptic13Date.Century.get -> int
Zorglub.Time.Specialized.Coptic13Date.CenturyOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.Coptic13Date.CompareTo(object? obj) -> int
Zorglub.Time.Specialized.Coptic13Date.CompareTo(Zorglub.Time.Specialized.Coptic13Date other) -> int
Zorglub.Time.Specialized.Coptic13Date.Coptic13Date() -> void
Zorglub.Time.Specialized.Coptic13Date.Coptic13Date(int year, int dayOfYear) -> void
Zorglub.Time.Specialized.Coptic13Date.Coptic13Date(int year, int month, int day) -> void
Zorglub.Time.Specialized.Coptic13Date.Coptic13Date(Zorglub.Time.DayNumber dayNumber) -> void
Zorglub.Time.Specialized.Coptic13Date.CountDaysSince(Zorglub.Time.Specialized.Coptic13Date other) -> int
Zorglub.Time.Specialized.Coptic13Date.CountElapsedDaysInMonth() -> int
Zorglub.Time.Specialized.Coptic13Date.CountElapsedDaysInYear() -> int
Zorglub.Time.Specialized.Coptic13Date.CountRemainingDaysInMonth() -> int
Zorglub.Time.Specialized.Coptic13Date.CountRemainingDaysInYear() -> int
Zorglub.Time.Specialized.Coptic13Date.Day.get -> int
Zorglub.Time.Specialized.Coptic13Date.DayNumber.get -> Zorglub.Time.DayNumber
Zorglub.Time.Specialized.Coptic13Date.DayOfWeek.get -> System.DayOfWeek
Zorglub.Time.Specialized.Coptic13Date.DayOfYear.get -> int
Zorglub.Time.Specialized.Coptic13Date.DaysSinceEpoch.get -> int
Zorglub.Time.Specialized.Coptic13Date.Deconstruct(out int year, out int dayOfYear) -> void
Zorglub.Time.Specialized.Coptic13Date.Deconstruct(out int year, out int month, out int day) -> void
Zorglub.Time.Specialized.Coptic13Date.Equals(Zorglub.Time.Specialized.Coptic13Date other) -> bool
Zorglub.Time.Specialized.Coptic13Date.IsEpagomenal(out int epagomenalNumber) -> bool
Zorglub.Time.Specialized.Coptic13Date.IsIntercalary.get -> bool
Zorglub.Time.Specialized.Coptic13Date.IsSupplementary.get -> bool
Zorglub.Time.Specialized.Coptic13Date.Month.get -> int
Zorglub.Time.Specialized.Coptic13Date.Nearest(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Coptic13Date
Zorglub.Time.Specialized.Coptic13Date.Next(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Coptic13Date
Zorglub.Time.Specialized.Coptic13Date.NextDay() -> Zorglub.Time.Specialized.Coptic13Date
Zorglub.Time.Specialized.Coptic13Date.NextOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Coptic13Date
Zorglub.Time.Specialized.Coptic13Date.PlusDays(int days) -> Zorglub.Time.Specialized.Coptic13Date
Zorglub.Time.Specialized.Coptic13Date.Previous(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Coptic13Date
Zorglub.Time.Specialized.Coptic13Date.PreviousDay() -> Zorglub.Time.Specialized.Coptic13Date
Zorglub.Time.Specialized.Coptic13Date.PreviousOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Coptic13Date
Zorglub.Time.Specialized.Coptic13Date.Year.get -> int
Zorglub.Time.Specialized.Coptic13Date.YearOfCentury.get -> int
Zorglub.Time.Specialized.Coptic13Date.YearOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.CopticAdjusters
Zorglub.Time.Specialized.CopticAdjusters.CopticAdjusters() -> void
Zorglub.Time.Specialized.CopticCalendar
Zorglub.Time.Specialized.CopticCalendar.CopticCalendar() -> void
Zorglub.Time.Specialized.CopticCalendar.MonthsInYear.get -> int
Zorglub.Time.Specialized.CopticDate
Zorglub.Time.Specialized.CopticDate.Century.get -> int
Zorglub.Time.Specialized.CopticDate.CenturyOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.CopticDate.CompareTo(object? obj) -> int
Zorglub.Time.Specialized.CopticDate.CompareTo(Zorglub.Time.Specialized.CopticDate other) -> int
Zorglub.Time.Specialized.CopticDate.CopticDate() -> void
Zorglub.Time.Specialized.CopticDate.CopticDate(int year, int dayOfYear) -> void
Zorglub.Time.Specialized.CopticDate.CopticDate(int year, int month, int day) -> void
Zorglub.Time.Specialized.CopticDate.CopticDate(Zorglub.Time.DayNumber dayNumber) -> void
Zorglub.Time.Specialized.CopticDate.CountDaysSince(Zorglub.Time.Specialized.CopticDate other) -> int
Zorglub.Time.Specialized.CopticDate.CountElapsedDaysInMonth() -> int
Zorglub.Time.Specialized.CopticDate.CountElapsedDaysInYear() -> int
Zorglub.Time.Specialized.CopticDate.CountRemainingDaysInMonth() -> int
Zorglub.Time.Specialized.CopticDate.CountRemainingDaysInYear() -> int
Zorglub.Time.Specialized.CopticDate.Day.get -> int
Zorglub.Time.Specialized.CopticDate.DayNumber.get -> Zorglub.Time.DayNumber
Zorglub.Time.Specialized.CopticDate.DayOfWeek.get -> System.DayOfWeek
Zorglub.Time.Specialized.CopticDate.DayOfYear.get -> int
Zorglub.Time.Specialized.CopticDate.DaysSinceEpoch.get -> int
Zorglub.Time.Specialized.CopticDate.Deconstruct(out int year, out int dayOfYear) -> void
Zorglub.Time.Specialized.CopticDate.Deconstruct(out int year, out int month, out int day) -> void
Zorglub.Time.Specialized.CopticDate.Equals(Zorglub.Time.Specialized.CopticDate other) -> bool
Zorglub.Time.Specialized.CopticDate.IsEpagomenal(out int epagomenalNumber) -> bool
Zorglub.Time.Specialized.CopticDate.IsIntercalary.get -> bool
Zorglub.Time.Specialized.CopticDate.IsSupplementary.get -> bool
Zorglub.Time.Specialized.CopticDate.Month.get -> int
Zorglub.Time.Specialized.CopticDate.Nearest(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.CopticDate
Zorglub.Time.Specialized.CopticDate.Next(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.CopticDate
Zorglub.Time.Specialized.CopticDate.NextDay() -> Zorglub.Time.Specialized.CopticDate
Zorglub.Time.Specialized.CopticDate.NextOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.CopticDate
Zorglub.Time.Specialized.CopticDate.PlusDays(int days) -> Zorglub.Time.Specialized.CopticDate
Zorglub.Time.Specialized.CopticDate.Previous(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.CopticDate
Zorglub.Time.Specialized.CopticDate.PreviousDay() -> Zorglub.Time.Specialized.CopticDate
Zorglub.Time.Specialized.CopticDate.PreviousOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.CopticDate
Zorglub.Time.Specialized.CopticDate.Year.get -> int
Zorglub.Time.Specialized.CopticDate.YearOfCentury.get -> int
Zorglub.Time.Specialized.CopticDate.YearOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.Ethiopic13Adjusters
Zorglub.Time.Specialized.Ethiopic13Adjusters.Ethiopic13Adjusters() -> void
Zorglub.Time.Specialized.Ethiopic13Calendar
Zorglub.Time.Specialized.Ethiopic13Calendar.Ethiopic13Calendar() -> void
Zorglub.Time.Specialized.Ethiopic13Calendar.MonthsInYear.get -> int
Zorglub.Time.Specialized.Ethiopic13Calendar.VirtualMonth.get -> int
Zorglub.Time.Specialized.Ethiopic13Date
Zorglub.Time.Specialized.Ethiopic13Date.Century.get -> int
Zorglub.Time.Specialized.Ethiopic13Date.CenturyOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.Ethiopic13Date.CompareTo(object? obj) -> int
Zorglub.Time.Specialized.Ethiopic13Date.CompareTo(Zorglub.Time.Specialized.Ethiopic13Date other) -> int
Zorglub.Time.Specialized.Ethiopic13Date.CountDaysSince(Zorglub.Time.Specialized.Ethiopic13Date other) -> int
Zorglub.Time.Specialized.Ethiopic13Date.CountElapsedDaysInMonth() -> int
Zorglub.Time.Specialized.Ethiopic13Date.CountElapsedDaysInYear() -> int
Zorglub.Time.Specialized.Ethiopic13Date.CountRemainingDaysInMonth() -> int
Zorglub.Time.Specialized.Ethiopic13Date.CountRemainingDaysInYear() -> int
Zorglub.Time.Specialized.Ethiopic13Date.Day.get -> int
Zorglub.Time.Specialized.Ethiopic13Date.DayNumber.get -> Zorglub.Time.DayNumber
Zorglub.Time.Specialized.Ethiopic13Date.DayOfWeek.get -> System.DayOfWeek
Zorglub.Time.Specialized.Ethiopic13Date.DayOfYear.get -> int
Zorglub.Time.Specialized.Ethiopic13Date.DaysSinceEpoch.get -> int
Zorglub.Time.Specialized.Ethiopic13Date.Deconstruct(out int year, out int dayOfYear) -> void
Zorglub.Time.Specialized.Ethiopic13Date.Deconstruct(out int year, out int month, out int day) -> void
Zorglub.Time.Specialized.Ethiopic13Date.Equals(Zorglub.Time.Specialized.Ethiopic13Date other) -> bool
Zorglub.Time.Specialized.Ethiopic13Date.Ethiopic13Date() -> void
Zorglub.Time.Specialized.Ethiopic13Date.Ethiopic13Date(int year, int dayOfYear) -> void
Zorglub.Time.Specialized.Ethiopic13Date.Ethiopic13Date(int year, int month, int day) -> void
Zorglub.Time.Specialized.Ethiopic13Date.Ethiopic13Date(Zorglub.Time.DayNumber dayNumber) -> void
Zorglub.Time.Specialized.Ethiopic13Date.IsEpagomenal(out int epagomenalNumber) -> bool
Zorglub.Time.Specialized.Ethiopic13Date.IsIntercalary.get -> bool
Zorglub.Time.Specialized.Ethiopic13Date.IsSupplementary.get -> bool
Zorglub.Time.Specialized.Ethiopic13Date.Month.get -> int
Zorglub.Time.Specialized.Ethiopic13Date.Nearest(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Ethiopic13Date
Zorglub.Time.Specialized.Ethiopic13Date.Next(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Ethiopic13Date
Zorglub.Time.Specialized.Ethiopic13Date.NextDay() -> Zorglub.Time.Specialized.Ethiopic13Date
Zorglub.Time.Specialized.Ethiopic13Date.NextOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Ethiopic13Date
Zorglub.Time.Specialized.Ethiopic13Date.PlusDays(int days) -> Zorglub.Time.Specialized.Ethiopic13Date
Zorglub.Time.Specialized.Ethiopic13Date.Previous(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Ethiopic13Date
Zorglub.Time.Specialized.Ethiopic13Date.PreviousDay() -> Zorglub.Time.Specialized.Ethiopic13Date
Zorglub.Time.Specialized.Ethiopic13Date.PreviousOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Ethiopic13Date
Zorglub.Time.Specialized.Ethiopic13Date.Year.get -> int
Zorglub.Time.Specialized.Ethiopic13Date.YearOfCentury.get -> int
Zorglub.Time.Specialized.Ethiopic13Date.YearOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.EthiopicAdjusters
Zorglub.Time.Specialized.EthiopicAdjusters.EthiopicAdjusters() -> void
Zorglub.Time.Specialized.EthiopicCalendar
Zorglub.Time.Specialized.EthiopicCalendar.EthiopicCalendar() -> void
Zorglub.Time.Specialized.EthiopicCalendar.MonthsInYear.get -> int
Zorglub.Time.Specialized.EthiopicDate
Zorglub.Time.Specialized.EthiopicDate.Century.get -> int
Zorglub.Time.Specialized.EthiopicDate.CenturyOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.EthiopicDate.CompareTo(object? obj) -> int
Zorglub.Time.Specialized.EthiopicDate.CompareTo(Zorglub.Time.Specialized.EthiopicDate other) -> int
Zorglub.Time.Specialized.EthiopicDate.CountDaysSince(Zorglub.Time.Specialized.EthiopicDate other) -> int
Zorglub.Time.Specialized.EthiopicDate.CountElapsedDaysInMonth() -> int
Zorglub.Time.Specialized.EthiopicDate.CountElapsedDaysInYear() -> int
Zorglub.Time.Specialized.EthiopicDate.CountRemainingDaysInMonth() -> int
Zorglub.Time.Specialized.EthiopicDate.CountRemainingDaysInYear() -> int
Zorglub.Time.Specialized.EthiopicDate.Day.get -> int
Zorglub.Time.Specialized.EthiopicDate.DayNumber.get -> Zorglub.Time.DayNumber
Zorglub.Time.Specialized.EthiopicDate.DayOfWeek.get -> System.DayOfWeek
Zorglub.Time.Specialized.EthiopicDate.DayOfYear.get -> int
Zorglub.Time.Specialized.EthiopicDate.DaysSinceEpoch.get -> int
Zorglub.Time.Specialized.EthiopicDate.Deconstruct(out int year, out int dayOfYear) -> void
Zorglub.Time.Specialized.EthiopicDate.Deconstruct(out int year, out int month, out int day) -> void
Zorglub.Time.Specialized.EthiopicDate.Equals(Zorglub.Time.Specialized.EthiopicDate other) -> bool
Zorglub.Time.Specialized.EthiopicDate.EthiopicDate() -> void
Zorglub.Time.Specialized.EthiopicDate.EthiopicDate(int year, int dayOfYear) -> void
Zorglub.Time.Specialized.EthiopicDate.EthiopicDate(int year, int month, int day) -> void
Zorglub.Time.Specialized.EthiopicDate.EthiopicDate(Zorglub.Time.DayNumber dayNumber) -> void
Zorglub.Time.Specialized.EthiopicDate.IsEpagomenal(out int epagomenalNumber) -> bool
Zorglub.Time.Specialized.EthiopicDate.IsIntercalary.get -> bool
Zorglub.Time.Specialized.EthiopicDate.IsSupplementary.get -> bool
Zorglub.Time.Specialized.EthiopicDate.Month.get -> int
Zorglub.Time.Specialized.EthiopicDate.Nearest(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.EthiopicDate
Zorglub.Time.Specialized.EthiopicDate.Next(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.EthiopicDate
Zorglub.Time.Specialized.EthiopicDate.NextDay() -> Zorglub.Time.Specialized.EthiopicDate
Zorglub.Time.Specialized.EthiopicDate.NextOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.EthiopicDate
Zorglub.Time.Specialized.EthiopicDate.PlusDays(int days) -> Zorglub.Time.Specialized.EthiopicDate
Zorglub.Time.Specialized.EthiopicDate.Previous(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.EthiopicDate
Zorglub.Time.Specialized.EthiopicDate.PreviousDay() -> Zorglub.Time.Specialized.EthiopicDate
Zorglub.Time.Specialized.EthiopicDate.PreviousOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.EthiopicDate
Zorglub.Time.Specialized.EthiopicDate.Year.get -> int
Zorglub.Time.Specialized.EthiopicDate.YearOfCentury.get -> int
Zorglub.Time.Specialized.EthiopicDate.YearOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.TabularIslamicAdjusters
Zorglub.Time.Specialized.TabularIslamicAdjusters.TabularIslamicAdjusters() -> void
Zorglub.Time.Specialized.TabularIslamicCalendar
Zorglub.Time.Specialized.TabularIslamicCalendar.MonthsInYear.get -> int
Zorglub.Time.Specialized.TabularIslamicCalendar.TabularIslamicCalendar() -> void
Zorglub.Time.Specialized.TabularIslamicDate
Zorglub.Time.Specialized.TabularIslamicDate.Century.get -> int
Zorglub.Time.Specialized.TabularIslamicDate.CenturyOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.TabularIslamicDate.CompareTo(object? obj) -> int
Zorglub.Time.Specialized.TabularIslamicDate.CompareTo(Zorglub.Time.Specialized.TabularIslamicDate other) -> int
Zorglub.Time.Specialized.TabularIslamicDate.CountDaysSince(Zorglub.Time.Specialized.TabularIslamicDate other) -> int
Zorglub.Time.Specialized.TabularIslamicDate.CountElapsedDaysInMonth() -> int
Zorglub.Time.Specialized.TabularIslamicDate.CountElapsedDaysInYear() -> int
Zorglub.Time.Specialized.TabularIslamicDate.CountRemainingDaysInMonth() -> int
Zorglub.Time.Specialized.TabularIslamicDate.CountRemainingDaysInYear() -> int
Zorglub.Time.Specialized.TabularIslamicDate.Day.get -> int
Zorglub.Time.Specialized.TabularIslamicDate.DayNumber.get -> Zorglub.Time.DayNumber
Zorglub.Time.Specialized.TabularIslamicDate.DayOfWeek.get -> System.DayOfWeek
Zorglub.Time.Specialized.TabularIslamicDate.DayOfYear.get -> int
Zorglub.Time.Specialized.TabularIslamicDate.DaysSinceEpoch.get -> int
Zorglub.Time.Specialized.TabularIslamicDate.Deconstruct(out int year, out int dayOfYear) -> void
Zorglub.Time.Specialized.TabularIslamicDate.Deconstruct(out int year, out int month, out int day) -> void
Zorglub.Time.Specialized.TabularIslamicDate.Equals(Zorglub.Time.Specialized.TabularIslamicDate other) -> bool
Zorglub.Time.Specialized.TabularIslamicDate.IsIntercalary.get -> bool
Zorglub.Time.Specialized.TabularIslamicDate.IsSupplementary.get -> bool
Zorglub.Time.Specialized.TabularIslamicDate.Month.get -> int
Zorglub.Time.Specialized.TabularIslamicDate.Nearest(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.TabularIslamicDate
Zorglub.Time.Specialized.TabularIslamicDate.Next(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.TabularIslamicDate
Zorglub.Time.Specialized.TabularIslamicDate.NextDay() -> Zorglub.Time.Specialized.TabularIslamicDate
Zorglub.Time.Specialized.TabularIslamicDate.NextOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.TabularIslamicDate
Zorglub.Time.Specialized.TabularIslamicDate.PlusDays(int days) -> Zorglub.Time.Specialized.TabularIslamicDate
Zorglub.Time.Specialized.TabularIslamicDate.Previous(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.TabularIslamicDate
Zorglub.Time.Specialized.TabularIslamicDate.PreviousDay() -> Zorglub.Time.Specialized.TabularIslamicDate
Zorglub.Time.Specialized.TabularIslamicDate.PreviousOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.TabularIslamicDate
Zorglub.Time.Specialized.TabularIslamicDate.TabularIslamicDate() -> void
Zorglub.Time.Specialized.TabularIslamicDate.TabularIslamicDate(int year, int dayOfYear) -> void
Zorglub.Time.Specialized.TabularIslamicDate.TabularIslamicDate(int year, int month, int day) -> void
Zorglub.Time.Specialized.TabularIslamicDate.TabularIslamicDate(Zorglub.Time.DayNumber dayNumber) -> void
Zorglub.Time.Specialized.TabularIslamicDate.Year.get -> int
Zorglub.Time.Specialized.TabularIslamicDate.YearOfCentury.get -> int
Zorglub.Time.Specialized.TabularIslamicDate.YearOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.WorldAdjusters
Zorglub.Time.Specialized.WorldAdjusters.WorldAdjusters() -> void
Zorglub.Time.Specialized.WorldCalendar
Zorglub.Time.Specialized.WorldCalendar.CountDaysInWorldMonth(int year, int month) -> int
Zorglub.Time.Specialized.WorldCalendar.MonthsInYear.get -> int
Zorglub.Time.Specialized.WorldCalendar.WorldCalendar() -> void
Zorglub.Time.Specialized.WorldDate
Zorglub.Time.Specialized.WorldDate.Century.get -> int
Zorglub.Time.Specialized.WorldDate.CenturyOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.WorldDate.CompareTo(object? obj) -> int
Zorglub.Time.Specialized.WorldDate.CompareTo(Zorglub.Time.Specialized.WorldDate other) -> int
Zorglub.Time.Specialized.WorldDate.CountDaysSince(Zorglub.Time.Specialized.WorldDate other) -> int
Zorglub.Time.Specialized.WorldDate.CountElapsedDaysInMonth() -> int
Zorglub.Time.Specialized.WorldDate.CountElapsedDaysInYear() -> int
Zorglub.Time.Specialized.WorldDate.CountRemainingDaysInMonth() -> int
Zorglub.Time.Specialized.WorldDate.CountRemainingDaysInYear() -> int
Zorglub.Time.Specialized.WorldDate.Day.get -> int
Zorglub.Time.Specialized.WorldDate.DayNumber.get -> Zorglub.Time.DayNumber
Zorglub.Time.Specialized.WorldDate.DayOfWeek.get -> System.DayOfWeek
Zorglub.Time.Specialized.WorldDate.DayOfYear.get -> int
Zorglub.Time.Specialized.WorldDate.DaysSinceEpoch.get -> int
Zorglub.Time.Specialized.WorldDate.Deconstruct(out int year, out int dayOfYear) -> void
Zorglub.Time.Specialized.WorldDate.Deconstruct(out int year, out int month, out int day) -> void
Zorglub.Time.Specialized.WorldDate.Equals(Zorglub.Time.Specialized.WorldDate other) -> bool
Zorglub.Time.Specialized.WorldDate.IsBlank.get -> bool
Zorglub.Time.Specialized.WorldDate.IsIntercalary.get -> bool
Zorglub.Time.Specialized.WorldDate.IsSupplementary.get -> bool
Zorglub.Time.Specialized.WorldDate.Month.get -> int
Zorglub.Time.Specialized.WorldDate.Nearest(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.WorldDate
Zorglub.Time.Specialized.WorldDate.Next(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.WorldDate
Zorglub.Time.Specialized.WorldDate.NextDay() -> Zorglub.Time.Specialized.WorldDate
Zorglub.Time.Specialized.WorldDate.NextOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.WorldDate
Zorglub.Time.Specialized.WorldDate.PlusDays(int days) -> Zorglub.Time.Specialized.WorldDate
Zorglub.Time.Specialized.WorldDate.Previous(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.WorldDate
Zorglub.Time.Specialized.WorldDate.PreviousDay() -> Zorglub.Time.Specialized.WorldDate
Zorglub.Time.Specialized.WorldDate.PreviousOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.WorldDate
Zorglub.Time.Specialized.WorldDate.WorldDate() -> void
Zorglub.Time.Specialized.WorldDate.WorldDate(int year, int dayOfYear) -> void
Zorglub.Time.Specialized.WorldDate.WorldDate(int year, int month, int day) -> void
Zorglub.Time.Specialized.WorldDate.WorldDate(Zorglub.Time.DayNumber dayNumber) -> void
Zorglub.Time.Specialized.WorldDate.Year.get -> int
Zorglub.Time.Specialized.WorldDate.YearOfCentury.get -> int
Zorglub.Time.Specialized.WorldDate.YearOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.Zoroastrian13Adjusters
Zorglub.Time.Specialized.Zoroastrian13Adjusters.Zoroastrian13Adjusters() -> void
Zorglub.Time.Specialized.Zoroastrian13Calendar
Zorglub.Time.Specialized.Zoroastrian13Calendar.MonthsInYear.get -> int
Zorglub.Time.Specialized.Zoroastrian13Calendar.VirtualMonth.get -> int
Zorglub.Time.Specialized.Zoroastrian13Calendar.Zoroastrian13Calendar() -> void
Zorglub.Time.Specialized.Zoroastrian13Date
Zorglub.Time.Specialized.Zoroastrian13Date.Century.get -> int
Zorglub.Time.Specialized.Zoroastrian13Date.CenturyOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.Zoroastrian13Date.CompareTo(object? obj) -> int
Zorglub.Time.Specialized.Zoroastrian13Date.CompareTo(Zorglub.Time.Specialized.Zoroastrian13Date other) -> int
Zorglub.Time.Specialized.Zoroastrian13Date.CountDaysSince(Zorglub.Time.Specialized.Zoroastrian13Date other) -> int
Zorglub.Time.Specialized.Zoroastrian13Date.CountElapsedDaysInMonth() -> int
Zorglub.Time.Specialized.Zoroastrian13Date.CountElapsedDaysInYear() -> int
Zorglub.Time.Specialized.Zoroastrian13Date.CountRemainingDaysInMonth() -> int
Zorglub.Time.Specialized.Zoroastrian13Date.CountRemainingDaysInYear() -> int
Zorglub.Time.Specialized.Zoroastrian13Date.Day.get -> int
Zorglub.Time.Specialized.Zoroastrian13Date.DayNumber.get -> Zorglub.Time.DayNumber
Zorglub.Time.Specialized.Zoroastrian13Date.DayOfWeek.get -> System.DayOfWeek
Zorglub.Time.Specialized.Zoroastrian13Date.DayOfYear.get -> int
Zorglub.Time.Specialized.Zoroastrian13Date.DaysSinceEpoch.get -> int
Zorglub.Time.Specialized.Zoroastrian13Date.Deconstruct(out int year, out int dayOfYear) -> void
Zorglub.Time.Specialized.Zoroastrian13Date.Deconstruct(out int year, out int month, out int day) -> void
Zorglub.Time.Specialized.Zoroastrian13Date.Equals(Zorglub.Time.Specialized.Zoroastrian13Date other) -> bool
Zorglub.Time.Specialized.Zoroastrian13Date.IsEpagomenal(out int epagomenalNumber) -> bool
Zorglub.Time.Specialized.Zoroastrian13Date.IsIntercalary.get -> bool
Zorglub.Time.Specialized.Zoroastrian13Date.IsSupplementary.get -> bool
Zorglub.Time.Specialized.Zoroastrian13Date.Month.get -> int
Zorglub.Time.Specialized.Zoroastrian13Date.Nearest(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Zoroastrian13Date
Zorglub.Time.Specialized.Zoroastrian13Date.Next(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Zoroastrian13Date
Zorglub.Time.Specialized.Zoroastrian13Date.NextDay() -> Zorglub.Time.Specialized.Zoroastrian13Date
Zorglub.Time.Specialized.Zoroastrian13Date.NextOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Zoroastrian13Date
Zorglub.Time.Specialized.Zoroastrian13Date.PlusDays(int days) -> Zorglub.Time.Specialized.Zoroastrian13Date
Zorglub.Time.Specialized.Zoroastrian13Date.Previous(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Zoroastrian13Date
Zorglub.Time.Specialized.Zoroastrian13Date.PreviousDay() -> Zorglub.Time.Specialized.Zoroastrian13Date
Zorglub.Time.Specialized.Zoroastrian13Date.PreviousOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.Zoroastrian13Date
Zorglub.Time.Specialized.Zoroastrian13Date.Year.get -> int
Zorglub.Time.Specialized.Zoroastrian13Date.YearOfCentury.get -> int
Zorglub.Time.Specialized.Zoroastrian13Date.YearOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.Zoroastrian13Date.Zoroastrian13Date() -> void
Zorglub.Time.Specialized.Zoroastrian13Date.Zoroastrian13Date(int year, int dayOfYear) -> void
Zorglub.Time.Specialized.Zoroastrian13Date.Zoroastrian13Date(int year, int month, int day) -> void
Zorglub.Time.Specialized.Zoroastrian13Date.Zoroastrian13Date(Zorglub.Time.DayNumber dayNumber) -> void
Zorglub.Time.Specialized.ZoroastrianAdjusters
Zorglub.Time.Specialized.ZoroastrianAdjusters.ZoroastrianAdjusters() -> void
Zorglub.Time.Specialized.ZoroastrianCalendar
Zorglub.Time.Specialized.ZoroastrianCalendar.MonthsInYear.get -> int
Zorglub.Time.Specialized.ZoroastrianCalendar.ZoroastrianCalendar() -> void
Zorglub.Time.Specialized.ZoroastrianDate
Zorglub.Time.Specialized.ZoroastrianDate.Century.get -> int
Zorglub.Time.Specialized.ZoroastrianDate.CenturyOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.ZoroastrianDate.CompareTo(object? obj) -> int
Zorglub.Time.Specialized.ZoroastrianDate.CompareTo(Zorglub.Time.Specialized.ZoroastrianDate other) -> int
Zorglub.Time.Specialized.ZoroastrianDate.CountDaysSince(Zorglub.Time.Specialized.ZoroastrianDate other) -> int
Zorglub.Time.Specialized.ZoroastrianDate.CountElapsedDaysInMonth() -> int
Zorglub.Time.Specialized.ZoroastrianDate.CountElapsedDaysInYear() -> int
Zorglub.Time.Specialized.ZoroastrianDate.CountRemainingDaysInMonth() -> int
Zorglub.Time.Specialized.ZoroastrianDate.CountRemainingDaysInYear() -> int
Zorglub.Time.Specialized.ZoroastrianDate.Day.get -> int
Zorglub.Time.Specialized.ZoroastrianDate.DayNumber.get -> Zorglub.Time.DayNumber
Zorglub.Time.Specialized.ZoroastrianDate.DayOfWeek.get -> System.DayOfWeek
Zorglub.Time.Specialized.ZoroastrianDate.DayOfYear.get -> int
Zorglub.Time.Specialized.ZoroastrianDate.DaysSinceEpoch.get -> int
Zorglub.Time.Specialized.ZoroastrianDate.Deconstruct(out int year, out int dayOfYear) -> void
Zorglub.Time.Specialized.ZoroastrianDate.Deconstruct(out int year, out int month, out int day) -> void
Zorglub.Time.Specialized.ZoroastrianDate.Equals(Zorglub.Time.Specialized.ZoroastrianDate other) -> bool
Zorglub.Time.Specialized.ZoroastrianDate.IsEpagomenal(out int epagomenalNumber) -> bool
Zorglub.Time.Specialized.ZoroastrianDate.IsIntercalary.get -> bool
Zorglub.Time.Specialized.ZoroastrianDate.IsSupplementary.get -> bool
Zorglub.Time.Specialized.ZoroastrianDate.Month.get -> int
Zorglub.Time.Specialized.ZoroastrianDate.Nearest(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.ZoroastrianDate
Zorglub.Time.Specialized.ZoroastrianDate.Next(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.ZoroastrianDate
Zorglub.Time.Specialized.ZoroastrianDate.NextDay() -> Zorglub.Time.Specialized.ZoroastrianDate
Zorglub.Time.Specialized.ZoroastrianDate.NextOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.ZoroastrianDate
Zorglub.Time.Specialized.ZoroastrianDate.PlusDays(int days) -> Zorglub.Time.Specialized.ZoroastrianDate
Zorglub.Time.Specialized.ZoroastrianDate.Previous(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.ZoroastrianDate
Zorglub.Time.Specialized.ZoroastrianDate.PreviousDay() -> Zorglub.Time.Specialized.ZoroastrianDate
Zorglub.Time.Specialized.ZoroastrianDate.PreviousOrSame(System.DayOfWeek dayOfWeek) -> Zorglub.Time.Specialized.ZoroastrianDate
Zorglub.Time.Specialized.ZoroastrianDate.Year.get -> int
Zorglub.Time.Specialized.ZoroastrianDate.YearOfCentury.get -> int
Zorglub.Time.Specialized.ZoroastrianDate.YearOfEra.get -> Zorglub.Time.Ord
Zorglub.Time.Specialized.ZoroastrianDate.ZoroastrianDate() -> void
Zorglub.Time.Specialized.ZoroastrianDate.ZoroastrianDate(int year, int dayOfYear) -> void
Zorglub.Time.Specialized.ZoroastrianDate.ZoroastrianDate(int year, int month, int day) -> void
Zorglub.Time.Specialized.ZoroastrianDate.ZoroastrianDate(Zorglub.Time.DayNumber dayNumber) -> void