<#@ template hostspecific="true" #>
<#@ output extension=".g.cs" #>
<#@ include file="$(ZorglubT4Directory)SpecializedCalendar.tt" once="true" #>
<#= new CivilTemplate(this).Execute() #><#+

public sealed class CivilTemplate : SpecializedCalendarTemplate
{
    public CivilTemplate(TextTransformation parent) : base(parent, "CivilSchema")
    {
        DaysSinceEpochField = "_daysSinceZero";
    }

    protected override void WriteContent()
    {
        WriteLine();
        EmitPragmas();

        WriteLine();
        EmitNamespace();
#>

using Zorglub.Time.Core.Schemas;
using Zorglub.Time.Hemerology;
using Zorglub.Time.Hemerology.Scopes;

<#+
        EmitCalendar();

        WriteLine();
        EmitAdjuster();
#>

/// <summary>Represents a clock for the Civil calendar.
/// <para>This class cannot be inherited.</para></summary>
public sealed partial class CivilClock { }

/// <summary>Represents the Civil date.
/// <para><see cref="CivilDate"/> is an immutable struct.</para></summary>
public readonly partial struct CivilDate :
    IDate<CivilDate, CivilCalendar>,
    IAdjustable<CivilDate>
{ }

<#+
        EmitDateCounting();

        WriteLine();
        EmitDateEquatable();

        WriteLine();
        EmitDateComparable();
    } // T4: End of WriteContent()

}

#>